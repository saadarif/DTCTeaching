slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
plot(birthw$bpd, birthw$bw); plot(birthw$ad, birthw$bw); plot(birthw$bpd, birthw$ad)
slidify("index.Rmd")
par(mfrow=c(1,3))
plot(log10(birthw$bpd), log10(birthw$bw))
plot(log10(birthw$ad), log10(birthw$bw))
plot(log10(birthw$bpd), log10(birthw$ad))
slidify("index.Rmd")
par(mfrow=c(1,2))
#for bpd
plot(log10(birthw$bpd), log10(birthw$bw))
logbpd_model <- lm(log10(bw)~log10(bpd), data=birthw)
abline(logbpd_model)
#for ad
plot(log10(birthw$ad), log10(birthw$bw))
logad_model <- lm(log10(bw)~log10(ad), data=birthw)
abline(logad_mode
)
par(mfrow=c(1,2))
#for bpd
plot(log10(birthw$bpd), log10(birthw$bw))
logbpd_model <- lm(log10(bw)~log10(bpd), data=birthw)
abline(logbpd_model)
#for ad
plot(log10(birthw$ad), log10(birthw$bw))
logad_model <- lm(log10(bw)~log10(ad), data=birthw)
abline(logad_model)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
summary(lm(log10(bpd)*log10(ad), data=birthw))
summary(lm(log10(bw)~log10(bpd)*log10(ad), data=birthw))
slidify("index.Rmd")
summary(logbpd_model)
summary(logbpd_model)
logbpd_model<-lm(log10(bw)~log10(bpd), data=birthw)
summary(logbpd_model)
summary(logad_model)
slidify("index.Rmd")
slidify("index.Rmd")
summary(logadd_model)
logadd_model<-lm(log10(bw)~log10(bpd)+log10(ad), data=birthw)
summary(logadd_model)
logmult_model<-lm(log10(bw)~log10(bpd)+log10(ad)+log10(bpd):log10(ad), data=birthw)
#The following call is equivalent: lm(log10(bw)~log10(bpd)*log10(ad), data=birthw)
summary(logmult_model)
anova(logad_model, logadd_model, logmult_model)
?AIC
AIC(logad_model, logadd_model, logmult_model))
AIC(logad_model, logadd_model, logmult_model)
#read in data from the web
if (!require(readxl, quietly=TRUE)) {install.packages("readxl") library(readl)}
if (!require(readxl, quietly=TRUE)) {install.packages("readxl"); library(readl)}
birthw<-read_xls("https://college.cengage.com/mathematics/brase/understandable_statistics/7e/students/datasets/mlr/excel/mlr02.xls")
birthw<-read_xls("mlr02.xls")
getwd()
publish(user = "saadarif", repo = "saadarif/DTCTeaching")
publish(user = "saadarif", repo = "/saadarif/IntroLinearModels")
?publish
publish(user = "saadarif", repo = "/IntroLinearModels")
blood<-read.csv("https://github.com/saadarif/DTCTeaching/blob/master/IntroductionLinearModels/Datasets/blood_pressure.csv")
blood<-read.table("https://github.com/saadarif/DTCTeaching/blob/master/IntroductionLinearModels/Datasets/blood_pressure.csv", header=T, sep=",")
blood<-read.table("https://github.com/saadarif/DTCTeaching/blob/master/IntroductionLinearModels/Datasets/blood_pressure.csv", header=T, sep=",")
head(blood)
blood<-read.table("https://raw.githubusercontent.com/saadarif/DTCTeaching/master/IntroductionLinearModels/Datasets/blood_pressure.csv", header=T, sep=",")
head(blood)
?pairs
pairs(blood[c(1,6,7,8)]
)
pairs(blood[c(1,6,12)]
)
pairs(blood[c("sbp", "age", "bmi")]
)
age_model<-lm(sbp~age, data=blood)
summary(age_model)
age_model<-lm(sbp~bmi, data=blood)
summary(age_model)
head(blood)
age_model<-lm(sbp~age, data=blood)
summary(age_model)
age_model<-lm(sbp~bmi*sex, data=blood)
head(blood)
age_model<-lm(sbp~bmi*gender, data=blood)
age_model
summary(age_model)
age_model<-lm(sbp~bmi*weight, data=blood)
summary(age_model)
mult_model<-lm(sbp~bmi+age+bmi:age, data=blood)#The following call is equivalent: lm(log10(bw)~log10(bpd)*log10(ad), data=birthw)
summary(mult_model)
blood<-read.table("Datasets/mlr02.csv", header=T, sep=",")
pairs(blood[c("sbp", "age", "bmi")], lower.panel = NULL)
pairs(blood, lower.panel = NULL)
age_model<-lm(sbp~age, data=blood)
summary(age_model)
bmi_model<-lm(sbp~bmi, data=blood)
summary(bmi_model)
bmi_model<-lm(sbp~weight, data=blood)
summary(bmi_model)
logmult_model<-lm(log10(bw)~log10(bpd)+log10(ad)+log10(bpd):log10(ad), data=birthw)
library(car)
vif(logmult_model)
sqrt(vif(logmult_model))
logadd_model<-lm(log10(bw)~log10(bpd)+log10(ad), data=birthw)
sqrt(vif(logadd_model))
summary(logmult_model)
(logadd_model)
(viflogadd_model)
vif(logadd_model)
logmult_model<-lm(log10(bw)~log10(bpd)+log10(ad)+log10(bpd):log10(ad), data=birthw)
summary(logmult_model)
model <- lm(log10(bw) ~  log10(ad) + log10(bpd) + I(log10(ad)*log10(bpd)),
data = birthw)
sumamry(model)
summary(model)
summary(logadd_model)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
cor(log10(birthw$bpd), log10(birthw$ad))
cor(log10(birthw$bpd), log10(birthw$ad)*log10(birthw$bpd))
summary(logmult_model)
anova(logad_model, logadd_model, logmult_model)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
qqnorm(rstandard(logadd_model), main="",
ylab = "Standardised residual",
xlab = "Normal quantile")
abline(0,1, lty = "21")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
par(mfrow=c(1,2))
scatter.smooth(logmult_model$residuals ~ log10(birthw$bpd),evaluation = 1000, degree = 1, ylab = "Residual",ylim = c(-0.2, 0.2),
xlab =  expression(paste(log[10],"(biparietal diameter)", sep="")))
abline(h = 0, lty = "21")
scatter.smooth(logmult_model$residuals ~ log10(birthw$ad),evaluation = 1000,degree = 1, ylab = "Residual",ylim = c(-0.2, 0.2), xlab = expression(paste(log[10],"(abdominal diameter)", sep="")))
abline(h = 0, lty = "21")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
?effects.lm
plot_model(logadd_model)
?plot_model
library(sjPlot)
install.packages(sjPlot)
install.packages("sjPlot")
install.packages("sjPlot")
library(sjPlot)
slidify("index.Rmd")
library(slidify)
getwd()
library(slidify)
slidify("index.Rmd")
plot(logadd_model)
plot(logadd_model, 1)
plot(logadd_model)
slidify("index.Rmd")
installed.packages("pkgconfig"
)
install.packages("pkgconfig")
slidify("index.Rmd")
slidify("index.Rmd")
plot(logadd_model, 1)
plot(logadd_model, 2)
plot(logadd_model, 3)
plot(logadd_model, 1)
plot(logadd_model, 2)
plot(logadd_model, 3)
plot(logadd_model, 4)
plot(logadd_model, 5)
plot(logadd_model, 3)
plot(logadd_model, 4)
plot(tooth.aov,1)
par(mfrow-c(1,2))
plot(ToothGrowth$dose, residuals(tooth.aov))
plot(ToothGrowth$supp, residuals(tooth.aov))
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
install.packages("effects")
library(effects)
ggplot(Predict(logadd_model), pval=TRUE)
ggplot(predict(logadd_model), lmpval=TRUE)
install.packages("summ")
library(effects)
effects(logadd_model)
install.packages("summ")
confint(logadd_model)
install.packages("jtools")
install.packages("jtools")
install.packages("jtools")
install.packages("jtools")
install.packages("jtools")
install.packages("jtools")
plot_summs(logadd_model)
if (!require(jtools, quietly=TRUE)) {install.packages("jtools");library(jtools)}
plot_summ(logadd_model)
plot_summs(logadd_model)
update.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
install.packages("ggstance")
plot_summs(logadd_model)
?plot_summs
plot_summs(logadd_model)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
tetrahymena <- read.csv2( "http://staff.pubhealth.ku.dk/~linearpredictors/datafiles/Tetrahymena.csv",
sep = ";",dec = ".", header=TRUE, colClasses = c("numeric","numeric","numeric"),
na.strings=".")
head(tetrahymena)
ggplot(aes(x = concentration, y = diameter, colour = glucose)) +
geom_smooth(method = "lm", se = FALSE) + theme_light() + scale_color_brewer(palette = "Set1") +
facet_grid(~glucose)
ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_smooth(method = "lm", se = FALSE) + theme_light() + scale_color_brewer(palette = "Set1") +
facet_grid(~glucose)
tetrahymena <- read.csv2( "http://staff.pubhealth.ku.dk/~linearpredictors/datafiles/Tetrahymena.csv",
sep = ";",dec = ".", header=TRUE, colClasses = c("factor","numeric","numeric"),
na.strings=".")
#Plot the relation ship between cell size and concenrtation for both glucose levels
ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_smooth(method = "lm", se = FALSE) + theme_light() + scale_color_brewer(palette = "Set1") +
facet_grid(~glucose)
ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_point(aes(colour = glucose)) +
geom_smooth(method = "lm", se = FALSE) + theme_light() + scale_color_brewer(palette = "Set1") +
facet_grid(~glucose)
head(tetrahymena)
slidify("index.Rmd")
eda + coord_trans(x="log10", y="log10")
eda <- ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_point(aes(colour = glucose)) + geom_smooth(method = "lm", se = FALSE)
+ theme_light() + scale_color_brewer(palette = "Set1") + facet_grid(~glucose) ; eda
eda <- ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_point(aes(colour = glucose)) + geom_smooth(method = "lm", se = FALSE) +
theme_light() + scale_color_brewer(palette = "Set1") + facet_grid(~glucose) ; eda
eda + coord_trans(x="log10", y="log10")
eda + scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10')
slidify("index.Rmd")
slidify("index.Rmd")
head(tetrahymena)
tet_model1 <- lm(log10(diameter) ~ log10(concentration)+ glucose +log10(concentration:glucose, data=tetrahymena)
tet_model1 <- lm(log10(diameter) ~ log10(concentration)+ glucose +log10(concentration):glucose, data=tetrahymena)
tet_model1 <- lm(log10(diameter) ~ log10(concentration)+ glucose +log10(concentration):glucose, data=tetrahymena)
summary(tet_model1)
aov(tet_model1)
anova(tet_model1)
display(tet_model1)
coefficients(tet_model1)
tet_model1 <- lm(log10(diameter) ~ log10(concentration)+ glucose +log10(concentration):glucose, data=tetrahymena)
summary(tet_model1)
tet_model1 <- lm(log10(diameter) ~ log10(concentration)+ glucose +log10(concentration)*glucose, data=tetrahymena)
summary(tet_mode
anova(tet_model1)
tet_model1 <- lm(log10(diameter) ~ log10(concentration)+ glucose +log10(concentration):glucose, data=tetrahymena)
summary(tet_model1)
tet_model2 <- lm(log10(diameter) ~ log10(concentration)+glucose, data=tetrahymena)
summary(tet_model2)
summary(tet_model1$coefficients
)
summary(tet_model1)$coefficients
anova(tet_model1, tet_model2)
ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_smooth(method = "lm", se = FALSE) + theme_light() + scale_color_brewer(palette = "Set1") + scale_x_continuous(trans = 'log10') + scale_y_continuous(trans = 'log10')
ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_point(aes(colour = glucose)) geom_smooth(method = "lm", se = FALSE) + theme_light() + scale_color_brewer(palette = "Set1") + scale_x_continuous(trans = 'log10') + scale_y_continuous(trans = 'log10'
ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_point(aes(colour = glucose))+ geom_smooth(method = "lm", se = FALSE) + theme_light() + scale_color_brewer(palette = "Set1") + scale_x_continuous(trans = 'log10') + scale_y_continuous(trans = 'log10')
?geom_smooth
ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_point(aes(colour = glucose))+ geom_smooth(method = "lm", se = T) + theme_light() + scale_color_brewer(palette = "Set1") + scale_x_continuous(trans = 'log10') + scale_y_continuous(trans = 'log10')
ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_point(aes(colour = glucose))+ geom_smooth(method = "lm", se = T) + theme_light() + scale_color_brewer(palette = "Set1") +  coord_trans(x="log10", y="log10")
ggplot(tetrahymena, aes(x = concentration, y = diameter, colour = glucose)) +
geom_point(aes(colour = glucose))+ geom_smooth(method = "lm", se = T) + theme_light() + scale_color_brewer(palette = "Set1") +  scale_x_continuous(trans = 'log10') + scale_y_continuous(trans = 'log10')
?predict
tlm <- lm(len ~ supp + dose + supp:dose, data = ToothGrowth)
summary(tlm)
summary(ToothGrowth)
summary(ToothGrowth)ToothGrowth$len[ToothGrowth$dose=="0.5" & ToothGrowth$supp=="OJ"]
summary(ToothGrowth)ToothGrowth$len[ToothGrowth$dose=="0.5" & ToothGrowth$supp=="OJ"]
ToothGrowth$len[ToothGrowth$dose=="0.5" & ToothGrowth$supp=="OJ"]
mean(ToothGrowth$len[ToothGrowth$dose=="0.5" & ToothGrowth$supp=="OJ"])
mean(ToothGrowth$len[ToothGrowth$dose=="0.5" & ToothGrowth$supp=="VC"])
m6 <- ToothGrowth$len[ToothGrowth$dose=="2" & ToothGrowth$supp=="VC"]
m1-m6
m1 <- ToothGrowth$len[ToothGrowth$dose=="0.5" & ToothGrowth$supp=="OJ"]
m1-m6
m1 <- mean(ToothGrowth$len[ToothGrowth$dose=="0.5" & ToothGrowth$supp=="OJ"])
m6 <- mean(ToothGrowth$len[ToothGrowth$dose=="2" & ToothGrowth$supp=="VC"])
m1-m6
m1
m6
m6 <- mean(ToothGrowth$len[ToothGrowth$dose=="1" & ToothGrowth$supp=="OJ"])
m1-m6
m6 <- mean(ToothGrowth$len[ToothGrowth$dose=="2" & ToothGrowth$supp=="OJ"])
m1-m6
m6 <- mean(ToothGrowth$len[ToothGrowth$dose=="1" & ToothGrowth$supp=="VC"])
m1-m6
summary(tlm)$coefficients
13.23-(9.47--5.25)
13.23-(-5.25+2.83)
13.23-(-5.25+12.83)
13.23-(9.47-5.25)
13.23-(-5.25+9.47)
tlm <- lm(len ~ supp + dose, data = ToothGrowth)
summary(tlm)
13.23 - (-3.7000+9.1300)
(-3.7000+9.1300) - (-5.25+ 9.47)
ToothGrowth$supp*ToothGrowth$dose
ToothGrowth$subgroups <- with(ToothGrowth, interaction(supp,  dose))
summary(ToothGrowth)
tlm1 <- lm(len ~ subgroups, data = ToothGrowth)
summary(tlm1)$coefficients
summary(tooth.aov)
summary(logmult_model)$coefficients
10^0
head(birthw)
10^14
summary(logadd_model)$coefficients
10^-2.54
log10(0)
10^1.55
10^1.466662
1.551943*(log10(1.01))
1.55*10^1
birthw
plot(birthw$bpd, birthw$bw)
log10(0)
log10(1)
log(exp)
log(exp(1))
log10(10)
plot(log10(birthw$bpd), log10(birthw$bw));logbpd_model<-lm(log10(bw)~log10(bpd), data=birthw)
abline(logbpd_model)
plot(log10(birthw$bpd), log10(birthw$bw));logbpd_model<-lm(log10(bw)~log10(bpd), data=birthw, ylim=c(-1,3.8), xlim=c(-1,2.1))
abline(logbpd_model)
plot(log10(birthw$bpd, log10(birthw$bw),, ylim=c(-1,3.8), xlim=c(-1,2.1));logbpd_model<-lm(log10(bw)~log10(bpd), data=birthw)
abline(logbpd_model)
plot(log10(birthw$bpd, log10(birthw$bw), ylim=c(-1,3.8), xlim=c(-1,2.1));logbpd_model<-lm(log10(bw)~log10(bpd), data=birthw)
abline(logbpd_model)
plot(log10(birthw$bpd, log10(birthw$bw, ylim=c(-1,3.8), xlim=c(-1,2.1));logbpd_model<-lm(log10(bw)~log10(bpd), data=birthw)
abline(logbpd_model)
plot(log10(birthw$bpd, log10(birthw$bw, ylim=c(-1,3.8), xlim=c(-1,2.1));logbpd_model<-lm(log10(bw)~log10(bpd), data=birthw)
abline(logbpd_model)
plot(log10(birthw$bpd, log10(birthw$bw), ylim=c(-1,3.8), xlim=c(-1,2.1))
plot(log10(birthw$bpd), log10(birthw$bw), ylim=c(-1,3.8), xlim=c(-1,2.1))
abline(logbpd_model)
plot(log10(birthw$bpd), log10(birthw$bw), ylim=c(-3,3.8), xlim=c(-1,2.1))
abline(logbpd_model)
summary(logadd_model)$coefficients
10^(1.55 * log(1.01))
exp(−.4984531∗log(1.01))
exp(−.4984531∗log(1.01))
exp(-.49*log(1.01))
1-1.036151
10^(1.55 * log(1.01))
101/100
10^(1.47 * log(1.01))
slidify("index.Rmd")
summary(tet_model1)
head(tetrahymena)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
summary(tet_model1)
head(tetrahymena)
slidify("index.Rmd")
tet_model1 <- lm(log10(diameter) ~ log10(concentration) + glucose + log10(concentration):glucose, data=tetrahymena
)
summary(tet_model1)
anova(tet_model1, tet_model2)
tet_model1 <- lm(diameter ~ log10(concentration) + glucose + log10(concentration):glucose, data=tetrahymena)
summary(tet_model1)
eda +
scale_y_continuous(trans = 'log10')
eda + scale_x_continuous(trans = 'log10')
head(tetrahymena)
tet_model2 <- lm(diameter ~ log10(concentration)+glucose, data=tetrahymena)
summary(tet_model2)$coefficients
tooth.lm <- lm(len ~ supp + dose + supp:dose, data = ToothGrowth)
summary(tooth.lm)$coefficients
head(model.matrix(tooth.lm), 20)
model.matrix(tooth.lm)
model.matrix(tooth.lm)[[1]]
class(model.matrix(tooth.lm))
model.matrix(tooth.lm)
summary(tooth.lm$coefficients)[1]
summary(tooth.lm)$coefficents
summary(tooth.lm)$coefficients
summary(tooth.lm)$coefficients[,1]
model.matrix(tooth.lm) %*% summary(tooth.lm)$coefficients[,1]
fitted.values((tooth.lm))
#multiple X by vector of betas to get fitted values
y_hat = model.matrix(tooth.lm)  %*% summary(tooth.lm)$coefficients[,1]
#These should be the same as predicted by the lm function
y_hat==fitted(tooth.lm)
fitted(tooth.lm)
y_hat
y_hat==t(fitted(tooth.lm))
dim(fitted(tooth.lm))
y_hat==as.vector(fitted(tooth.lm))
as.vector(fitted(tooth.lm))
Y-hat
Y-hat
y_hat
dim(y_hat)
as.vector(y_hat)==as.vector(fitted(tooth.lm)
)
as.vector(y_hat)
as.vector(fitted(tooth.lm)
)
as.vector(y_hat)==as.vector(fitted(tooth.lm))
as.vector(y_hat)
as.vector(fitted(tooth.lm))
help("ToothGrowth")
summary(tooth.lm)$coefficients
13.23 + 9.47 -5.25 -0.68
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
p<-ggplot(ToothGrowth, aes(x=dose, y=len, fill=supp))  + theme(legend.position="none") + geom_boxplot(position=position_dodge(1)) + stat_summary(fun.y=mean, geom="line", aes(group=supp), position=position_dodge(1))  + stat_summary(fun.y=mean, geom="point", position=position_dodge(1)) + theme_bw()
p
13.23 - 5.25 + 9.47
9.47 - -0.68
summary(tooth.lm)$coefficients
13.23-5.25+9.47-0.68
16.77-9.47
head(ToothGrowth)
ToothGrowth$factorC <- with(ToothGrowth, interaction(supp,  dose))
head(ToothGrowth)
tapply(ToothGrowth$len, ToothGrowth$factorC, mean)
13.23-26.06
13.23-22.70
7.98 - 16.77
] -8.79- -9.47
-8.79- -9.47
VC_05vs1- OJ_05vs1
subgrpmeans <-tapply(ToothGrowth$len, ToothGrowth$suppDose, mean)
#For suppVC:dose1:
#difference between dose 0.5 and 1 for OJ
OJ_05vs1 <- subgrpmeans[1]-subgrpmeans[3]
#difference between dose 0.5 and 1 for VC
VC_05vs1 <- subgrpmeans[2]-subgrpmeans[4]
#suppVC:dose1 coefficient reflects the diff b/w VC_05vs1 and OJ_05vs1
VC_05vs1- OJ_05vs1
oothGrowth$suppDose <- with(ToothGrowth, interaction(supp,  dose))
#calculate the means for each of the six sub groups and compare to coefficents
subgrpmeans <-tapply(ToothGrowth$len, ToothGrowth$suppDose, mean)
#For suppVC:dose1:
#difference between dose 0.5 and 1 for OJ
OJ_05vs1 <- subgrpmeans[1]-subgrpmeans[3]
#difference between dose 0.5 and 1 for VC
VC_05vs1 <- subgrpmeans[2]-subgrpmeans[4]
#suppVC:dose1 coefficient reflects the diff b/w VC_05vs1 and OJ_05vs1
VC_05vs1- OJ_05vs1
ToothGrowth$suppDose <- with(ToothGrowth, interaction(supp,  dose))
#calculate the means for each of the six sub groups and compare to coefficents
subgrpmeans <-tapply(ToothGrowth$len, ToothGrowth$suppDose, mean)
#For suppVC:dose1:
#difference between dose 0.5 and 1 for OJ
OJ_05vs1 <- subgrpmeans[1]-subgrpmeans[3]
#difference between dose 0.5 and 1 for VC
VC_05vs1 <- subgrpmeans[2]-subgrpmeans[4]
#suppVC:dose1 coefficient reflects the diff b/w VC_05vs1 and OJ_05vs1
VC_05vs1- OJ_05vs1
OJ_05vs1- VC_05vs1
slidify("index.Rmd")
